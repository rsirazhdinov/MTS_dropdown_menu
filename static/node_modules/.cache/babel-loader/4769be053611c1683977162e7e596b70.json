{"remainingRequest":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/babel-loader/lib/index.js!/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/eslint-loader/index.js??ref--13-0!/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/store/index.js","dependencies":[{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/store/index.js","mtime":1603027412114},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gc3RvcmUvaW5kZXguanMKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsgLy8gaW1wb3J0cyBvZiBBSkFYIGZ1bmN0aW9ucyB3aWxsIGdvIGhlcmUKCmltcG9ydCB7IGZldGNoU3VydmV5cywgZmV0Y2hTdXJ2ZXksIHNhdmVTdXJ2ZXlSZXNwb25zZSwgcG9zdE5ld1N1cnZleSwgYXV0aGVudGljYXRlLCByZWdpc3RlciBhcyBfcmVnaXN0ZXIgfSBmcm9tICdAL2FwaSc7CmltcG9ydCB7IGlzVmFsaWRKd3QsIEV2ZW50QnVzIH0gZnJvbSAnQC91dGlscyc7ClZ1ZS51c2UoVnVleCk7CnZhciBzdGF0ZSA9IHsKICAvLyBzaW5nbGUgc291cmNlIG9mIGRhdGEKICBzdXJ2ZXlzOiBbXSwKICBjdXJyZW50U3VydmV5OiB7fSwKICB1c2VyOiB7fSwKICBqd3Q6ICcnCn07CnZhciBhY3Rpb25zID0gewogIC8vIGFzeW5jaHJvbm91cyBvcGVyYXRpb25zCiAgbG9hZFN1cnZleXM6IGZ1bmN0aW9uIGxvYWRTdXJ2ZXlzKGNvbnRleHQpIHsKICAgIHJldHVybiBmZXRjaFN1cnZleXMoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBjb250ZXh0LmNvbW1pdCgnc2V0U3VydmV5cycsIHsKICAgICAgICBzdXJ2ZXlzOiByZXNwb25zZS5kYXRhCiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBsb2FkU3VydmV5OiBmdW5jdGlvbiBsb2FkU3VydmV5KGNvbnRleHQsIF9yZWYpIHsKICAgIHZhciBpZCA9IF9yZWYuaWQ7CiAgICByZXR1cm4gZmV0Y2hTdXJ2ZXkoaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRTdXJ2ZXknLCB7CiAgICAgICAgc3VydmV5OiByZXNwb25zZS5kYXRhCiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBhZGRTdXJ2ZXlSZXNwb25zZTogZnVuY3Rpb24gYWRkU3VydmV5UmVzcG9uc2UoY29udGV4dCkgewogICAgcmV0dXJuIHNhdmVTdXJ2ZXlSZXNwb25zZShjb250ZXh0LnN0YXRlLmN1cnJlbnRTdXJ2ZXkpOwogIH0sCiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKGNvbnRleHQsIHVzZXJEYXRhKSB7CiAgICBjb250ZXh0LmNvbW1pdCgnc2V0VXNlckRhdGEnLCB7CiAgICAgIHVzZXJEYXRhOiB1c2VyRGF0YQogICAgfSk7CiAgICByZXR1cm4gYXV0aGVudGljYXRlKHVzZXJEYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gY29udGV4dC5jb21taXQoJ3NldEp3dFRva2VuJywgewogICAgICAgIGp3dDogcmVzcG9uc2UuZGF0YQogICAgICB9KTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICBjb25zb2xlLmxvZygnRXJyb3IgQXV0aGVudGljYXRpbmc6ICcsIGVycm9yKTsKICAgICAgRXZlbnRCdXMuZW1pdCgnZmFpbGVkQXV0aGVudGljYXRpb24nLCBlcnJvcik7CiAgICB9KTsKICB9LAogIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3Rlcihjb250ZXh0LCB1c2VyRGF0YSkgewogICAgY29udGV4dC5jb21taXQoJ3NldFVzZXJEYXRhJywgewogICAgICB1c2VyRGF0YTogdXNlckRhdGEKICAgIH0pOwogICAgcmV0dXJuIF9yZWdpc3Rlcih1c2VyRGF0YSkudGhlbihjb250ZXh0LmRpc3BhdGNoKCdsb2dpbicsIHVzZXJEYXRhKSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUubG9nKCdFcnJvciBSZWdpc3RlcmluZzogJywgZXJyb3IpOwogICAgICBFdmVudEJ1cy5lbWl0KCdmYWlsZWRSZWdpc3RlcmluZzogJywgZXJyb3IpOwogICAgfSk7CiAgfSwKICBzdWJtaXROZXdTdXJ2ZXk6IGZ1bmN0aW9uIHN1Ym1pdE5ld1N1cnZleShjb250ZXh0LCBzdXJ2ZXkpIHsKICAgIHJldHVybiBwb3N0TmV3U3VydmV5KHN1cnZleSwgY29udGV4dC5zdGF0ZS5qd3QudG9rZW4pOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICAvLyBpc29sYXRlZCBkYXRhIG11dGF0aW9ucwogIHNldFN1cnZleXM6IGZ1bmN0aW9uIHNldFN1cnZleXMoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLnN1cnZleXMgPSBwYXlsb2FkLnN1cnZleXM7CiAgfSwKICBzZXRTdXJ2ZXk6IGZ1bmN0aW9uIHNldFN1cnZleShzdGF0ZSwgcGF5bG9hZCkgewogICAgdmFyIG5RdWVzdGlvbnMgPSBwYXlsb2FkLnN1cnZleS5xdWVzdGlvbnMubGVuZ3RoOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgblF1ZXN0aW9uczsgaSsrKSB7CiAgICAgIHBheWxvYWQuc3VydmV5LnF1ZXN0aW9uc1tpXS5jaG9pY2UgPSBudWxsOwogICAgfQoKICAgIHN0YXRlLmN1cnJlbnRTdXJ2ZXkgPSBwYXlsb2FkLnN1cnZleTsKICB9LAogIHNldENob2ljZTogZnVuY3Rpb24gc2V0Q2hvaWNlKHN0YXRlLCBwYXlsb2FkKSB7CiAgICB2YXIgcXVlc3Rpb25JZCA9IHBheWxvYWQucXVlc3Rpb25JZCwKICAgICAgICBjaG9pY2UgPSBwYXlsb2FkLmNob2ljZTsKICAgIHZhciBuUXVlc3Rpb25zID0gc3RhdGUuY3VycmVudFN1cnZleS5xdWVzdGlvbnMubGVuZ3RoOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgblF1ZXN0aW9uczsgaSsrKSB7CiAgICAgIGlmIChzdGF0ZS5jdXJyZW50U3VydmV5LnF1ZXN0aW9uc1tpXS5pZCA9PT0gcXVlc3Rpb25JZCkgewogICAgICAgIHN0YXRlLmN1cnJlbnRTdXJ2ZXkucXVlc3Rpb25zW2ldLmNob2ljZSA9IGNob2ljZTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0sCiAgc2V0VXNlckRhdGE6IGZ1bmN0aW9uIHNldFVzZXJEYXRhKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBjb25zb2xlLmxvZygnc2V0VXNlckRhdGEgcGF5bG9hZCA9ICcsIHBheWxvYWQpOwogICAgc3RhdGUudXNlckRhdGEgPSBwYXlsb2FkLnVzZXJEYXRhOwogIH0sCiAgc2V0Snd0VG9rZW46IGZ1bmN0aW9uIHNldEp3dFRva2VuKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBjb25zb2xlLmxvZygnc2V0Snd0VG9rZW4gcGF5bG9hZCA9ICcsIHBheWxvYWQpOwogICAgbG9jYWxTdG9yYWdlLnRva2VuID0gcGF5bG9hZC5qd3QudG9rZW47CiAgICBzdGF0ZS5qd3QgPSBwYXlsb2FkLmp3dDsKICB9Cn07CnZhciBnZXR0ZXJzID0gewogIC8vIHJldXNhYmxlIGRhdGEgYWNjZXNzb3JzCiAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgIHJldHVybiBpc1ZhbGlkSnd0KHN0YXRlLmp3dC50b2tlbik7CiAgfQp9Owp2YXIgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHN0YXRlLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9KTsKZXhwb3J0IGRlZmF1bHQgc3RvcmU7"},{"version":3,"sources":["/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/store/index.js"],"names":["Vue","Vuex","fetchSurveys","fetchSurvey","saveSurveyResponse","postNewSurvey","authenticate","register","isValidJwt","EventBus","use","state","surveys","currentSurvey","user","jwt","actions","loadSurveys","context","then","response","commit","data","loadSurvey","id","survey","addSurveyResponse","login","userData","catch","error","console","log","emit","dispatch","submitNewSurvey","token","mutations","setSurveys","payload","setSurvey","nQuestions","questions","length","i","choice","setChoice","questionId","setUserData","setJwtToken","localStorage","getters","isAuthenticated","store","Store"],"mappings":"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","sourcesContent":["// store/index.js\n\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\n// imports of AJAX functions will go here\nimport { fetchSurveys, fetchSurvey, saveSurveyResponse, postNewSurvey, authenticate, register } from '@/api'\nimport { isValidJwt, EventBus } from '@/utils'\n\nVue.use(Vuex)\n\nconst state = {\n  // single source of data\n  surveys: [],\n  currentSurvey: {},\n  user: {},\n  jwt: ''\n}\n\nconst actions = {\n  // asynchronous operations\n  loadSurveys (context) {\n    return fetchSurveys()\n      .then((response) => {\n        context.commit('setSurveys', { surveys: response.data })\n      })\n  },\n  loadSurvey (context, { id }) {\n    return fetchSurvey(id)\n      .then((response) => {\n        context.commit('setSurvey', { survey: response.data })\n      })\n  },\n  addSurveyResponse (context) {\n    return saveSurveyResponse(context.state.currentSurvey)\n  },\n  login (context, userData) {\n    context.commit('setUserData', { userData })\n    return authenticate(userData)\n      .then(response => context.commit('setJwtToken', { jwt: response.data }))\n      .catch(error => {\n        console.log('Error Authenticating: ', error)\n        EventBus.emit('failedAuthentication', error)\n      })\n  },\n  register (context, userData) {\n    context.commit('setUserData', { userData })\n    return register(userData)\n      .then(context.dispatch('login', userData))\n      .catch(error => {\n        console.log('Error Registering: ', error)\n        EventBus.emit('failedRegistering: ', error)\n      })\n  },\n  submitNewSurvey (context, survey) {\n    return postNewSurvey(survey, context.state.jwt.token)\n  }\n}\n\nconst mutations = {\n  // isolated data mutations\n  setSurveys (state, payload) {\n    state.surveys = payload.surveys\n  },\n  setSurvey (state, payload) {\n    const nQuestions = payload.survey.questions.length\n    for (let i = 0; i < nQuestions; i++) {\n      payload.survey.questions[i].choice = null\n    }\n    state.currentSurvey = payload.survey\n  },\n  setChoice (state, payload) {\n    const { questionId, choice } = payload\n    const nQuestions = state.currentSurvey.questions.length\n    for (let i = 0; i < nQuestions; i++) {\n      if (state.currentSurvey.questions[i].id === questionId) {\n        state.currentSurvey.questions[i].choice = choice\n        break\n      }\n    }\n  },\n  setUserData (state, payload) {\n    console.log('setUserData payload = ', payload)\n    state.userData = payload.userData\n  },\n  setJwtToken (state, payload) {\n    console.log('setJwtToken payload = ', payload)\n    localStorage.token = payload.jwt.token\n    state.jwt = payload.jwt\n  }\n}\n\nconst getters = {\n  // reusable data accessors\n  isAuthenticated (state) {\n    return isValidJwt(state.jwt.token)\n  }\n}\n\nconst store = new Vuex.Store({\n  state,\n  actions,\n  mutations,\n  getters\n})\n\nexport default store\n"]}]}