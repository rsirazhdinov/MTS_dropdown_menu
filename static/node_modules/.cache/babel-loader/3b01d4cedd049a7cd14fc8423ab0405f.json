{"remainingRequest":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/babel-loader/lib/index.js!/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/components/Survey.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/components/Survey.vue","mtime":1603027412114},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50UXVlc3Rpb246IDAKICAgIH07CiAgfSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbG9hZFN1cnZleScsIHsKICAgICAgaWQ6IHBhcnNlSW50KHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ29Ub05leHRRdWVzdGlvbjogZnVuY3Rpb24gZ29Ub05leHRRdWVzdGlvbigpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudFF1ZXN0aW9uID09PSB0aGlzLnN1cnZleS5xdWVzdGlvbnMubGVuZ3RoIC0gMSkgewogICAgICAgIHRoaXMuY3VycmVudFF1ZXN0aW9uID0gMDsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmN1cnJlbnRRdWVzdGlvbisrOwogICAgICB9CiAgICB9LAogICAgZ29Ub1ByZXZpb3VzUXVlc3Rpb246IGZ1bmN0aW9uIGdvVG9QcmV2aW91c1F1ZXN0aW9uKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50UXVlc3Rpb24gPT09IDApIHsKICAgICAgICB0aGlzLmN1cnJlbnRRdWVzdGlvbiA9IHRoaXMuc3VydmV5LnF1ZXN0aW9ucy5sZW50aCAtIDE7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb24tLTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24gaGFuZGxlU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZFN1cnZleVJlc3BvbnNlJykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLiRyb3V0ZXIucHVzaCgnLycpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdXJ2ZXlDb21wbGV0ZTogZnVuY3Rpb24gc3VydmV5Q29tcGxldGUoKSB7CiAgICAgIGlmICh0aGlzLnN1cnZleS5xdWVzdGlvbnMpIHsKICAgICAgICB2YXIgbnVtUXVlc3Rpb25zID0gdGhpcy5zdXJ2ZXkucXVlc3Rpb25zLmxlbmd0aDsKICAgICAgICB2YXIgbnVtQ29tcGxldGVkID0gdGhpcy5zdXJ2ZXkucXVlc3Rpb25zLmZpbHRlcihmdW5jdGlvbiAocSkgewogICAgICAgICAgcmV0dXJuIHEuY2hvaWNlOwogICAgICAgIH0pLmxlbmd0aDsKICAgICAgICByZXR1cm4gbnVtUXVlc3Rpb25zID09PSBudW1Db21wbGV0ZWQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBzdXJ2ZXk6IGZ1bmN0aW9uIHN1cnZleSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRTdXJ2ZXk7CiAgICB9LAogICAgc2VsZWN0ZWRDaG9pY2U6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgdmFyIHF1ZXN0aW9uID0gdGhpcy5zdXJ2ZXkucXVlc3Rpb25zW3RoaXMuY3VycmVudFF1ZXN0aW9uXTsKICAgICAgICByZXR1cm4gcXVlc3Rpb24uY2hvaWNlOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWx1ZSkgewogICAgICAgIHZhciBxdWVzdGlvbiA9IHRoaXMuc3VydmV5LnF1ZXN0aW9uc1t0aGlzLmN1cnJlbnRRdWVzdGlvbl07CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRDaG9pY2UnLCB7CiAgICAgICAgICBxdWVzdGlvbklkOiBxdWVzdGlvbi5pZCwKICAgICAgICAgIGNob2ljZTogdmFsdWUKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["Survey.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,WANA,yBAMA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AAAA,MAAA,EAAA,EAAA,QAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAAA,KAAA;AACA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,KAAA,eAAA,KAAA,KAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,eAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,eAAA;AACA;AACA,KAPA;AAQA,IAAA,oBARA,kCAQA;AACA,UAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,aAAA,eAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,KAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,eAAA;AACA;AACA,KAdA;AAeA,IAAA,YAfA,0BAeA;AAAA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EACA,IADA,CACA;AAAA,eAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,OADA;AAEA;AAlBA,GATA;AA6BA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,KAAA,MAAA,CAAA,SAAA,EAAA;AACA,YAAA,YAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,MAAA;AACA,YAAA,YAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,MAAA;AAAA,SAAA,EAAA,MAAA;AACA,eAAA,YAAA,KAAA,YAAA;AACA;;AACA,aAAA,KAAA;AACA,KARA;AASA,IAAA,MATA,oBASA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA;AACA,KAXA;AAYA,IAAA,cAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,YAAA,QAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,KAAA,eAAA,CAAA;AACA,eAAA,QAAA,CAAA,MAAA;AACA,OAJA;AAKA,MAAA,GALA,eAKA,KALA,EAKA;AACA,YAAA,QAAA,GAAA,KAAA,MAAA,CAAA,SAAA,CAAA,KAAA,eAAA,CAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA;AAAA,UAAA,UAAA,EAAA,QAAA,CAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA;AACA;AARA;AAZA;AA7BA,CAAA","sourcesContent":["<template>\n  <div>\n    <section class=\"hero is-primary\">\n      <div class=\"hero-body\">\n        <div class=\"container has-text-centered\">\n          <h2 class=\"title\">{{ survey.name }}</h2>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"section\">\n      <div class=\"container\">\n\n        <div class=\"columns\">\n          <div class=\"column is-10 is-offset-1\">\n\n            <div\n              v-for=\"(question, idx) in survey.questions\"\n              v-bind:key=\"question.id\"\n              v-show=\"currentQuestion === idx\">\n\n                  <div class=\"column is-offset-3 is-6\">\n                    <h4 class='title has-text-centered'>{{ question.text }}</h4>\n                  </div>\n                  <div class=\"column is-offset-4 is-4\">\n                    <div class=\"control\">\n                      <div v-for=\"choice in question.choices\" v-bind:key=\"choice.id\">\n                        <label class=\"radio\">\n                        <input type=\"radio\" v-model=\"question.choice\" name=\"choice\" :value=\"choice.id\">\n                        {{ choice.text }}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n            </div>\n\n            <div class=\"column is-offset-one-quarter is-half\">\n              <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                <a class=\"pagination-previous\" @click.stop=\"goToPreviousQuestion\"><i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i> &nbsp;&nbsp; Back</a>\n                <a class=\"pagination-next\" @click.stop=\"goToNextQuestion\">Next &nbsp;&nbsp; <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></a>\n              </nav>\n            </div>\n\n            <div class=\"has-text-centered\">\n              <a v-show=\"surveyComplete\" class='button is-large is-focused is-primary' @click=\"handleSubmit\">Submit</a>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      currentQuestion: 0\n    }\n  },\n  beforeMount () {\n    this.$store.dispatch('loadSurvey', { id: parseInt(this.$route.params.id) })\n  },\n  methods: {\n    goToNextQuestion () {\n      if (this.currentQuestion === this.survey.questions.length - 1) {\n        this.currentQuestion = 0\n      } else {\n        this.currentQuestion++\n      }\n    },\n    goToPreviousQuestion () {\n      if (this.currentQuestion === 0) {\n        this.currentQuestion = this.survey.questions.lenth - 1\n      } else {\n        this.currentQuestion--\n      }\n    },\n    handleSubmit () {\n      this.$store.dispatch('addSurveyResponse')\n        .then(() => this.$router.push('/'))\n    }\n  },\n  computed: {\n    surveyComplete () {\n      if (this.survey.questions) {\n        const numQuestions = this.survey.questions.length\n        const numCompleted = this.survey.questions.filter(q => q.choice).length\n        return numQuestions === numCompleted\n      }\n      return false\n    },\n    survey () {\n      return this.$store.state.currentSurvey\n    },\n    selectedChoice: {\n      get () {\n        const question = this.survey.questions[this.currentQuestion]\n        return question.choice\n      },\n      set (value) {\n        const question = this.survey.questions[this.currentQuestion]\n        this.$store.commit('setChoice', { questionId: question.id, choice: value })\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}