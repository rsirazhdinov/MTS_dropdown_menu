{"remainingRequest":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/babel-loader/lib/index.js!/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/eslint-loader/index.js??ref--13-0!/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/api/index.js","dependencies":[{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/api/index.js","mtime":1603142529432},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rsirazhdinov/PycharmProjects/flaskProject/static/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gYXBpL2luZGV4LmpzCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vIGNvbnN0IEFQSV9VUkwgPSBwcm9jZXNzLmVudi5BUElfVVJMCgp2YXIgQVBJX1VSTCA9ICdodHRwOi8vMTI3LjAuMC4xOjUwMDAvYXBpJzsKZXhwb3J0IGZ1bmN0aW9uIGZldGNoQ2l0aWVzKGp3dCkgewogIHJldHVybiBheGlvcy5nZXQoIiIuY29uY2F0KEFQSV9VUkwsICIvY2l0aWVzLyIpLCB7CiAgICBoZWFkZXJzOiB7CiAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXI6ICIuY29uY2F0KGp3dCkKICAgIH0KICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gYXV0aGVudGljYXRlKHVzZXJEYXRhKSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoIiIuY29uY2F0KEFQSV9VUkwsICIvbG9naW4vIiksIHVzZXJEYXRhKTsKfQpleHBvcnQgZnVuY3Rpb24gc2F2ZV9jdXJyZW50X2NpdHkoY2l0eSwgand0KSB7CiAgcmV0dXJuIGF4aW9zLnBvc3QoIiIuY29uY2F0KEFQSV9VUkwsICIvc2F2ZV9jaXR5LyIpLCBjaXR5LCB7CiAgICBoZWFkZXJzOiB7CiAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXI6ICIuY29uY2F0KGp3dCkKICAgIH0KICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXIodXNlckRhdGEpIHsKICByZXR1cm4gYXhpb3MucG9zdCgiIi5jb25jYXQoQVBJX1VSTCwgIi9yZWdpc3Rlci8iKSwgdXNlckRhdGEpOwp9"},{"version":3,"sources":["/home/rsirazhdinov/PycharmProjects/flaskProject/static/src/api/index.js"],"names":["axios","API_URL","fetchCities","jwt","get","headers","Authorization","authenticate","userData","post","save_current_city","city","register"],"mappings":"AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,2BAAhB;AAEA,OAAO,SAASC,WAAT,CAAsBC,GAAtB,EAA2B;AAChC,SAAOH,KAAK,CAACI,GAAN,WAAaH,OAAb,eAAgC;AAAEI,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,oBAAaH,GAAb;AAAf;AAAX,GAAhC,CAAP;AACD;AAED,OAAO,SAASI,YAAT,CAAuBC,QAAvB,EAAiC;AACtC,SAAOR,KAAK,CAACS,IAAN,WAAcR,OAAd,cAAgCO,QAAhC,CAAP;AACD;AAED,OAAO,SAASE,iBAAT,CAA4BC,IAA5B,EAAkCR,GAAlC,EAAuC;AAC5C,SAAOH,KAAK,CAACS,IAAN,WAAcR,OAAd,kBAAoCU,IAApC,EAA0C;AAAEN,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,oBAAaH,GAAb;AAAf;AAAX,GAA1C,CAAP;AACD;AAED,OAAO,SAASS,QAAT,CAAmBJ,QAAnB,EAA6B;AAClC,SAAOR,KAAK,CAACS,IAAN,WAAcR,OAAd,iBAAmCO,QAAnC,CAAP;AACD","sourcesContent":["\n// api/index.js\n\nimport axios from 'axios'\n\n// const API_URL = process.env.API_URL\nconst API_URL = 'http://127.0.0.1:5000/api'\n\nexport function fetchCities (jwt) {\n  return axios.get(`${API_URL}/cities/`, { headers: { Authorization: `Bearer: ${jwt}` } })\n}\n\nexport function authenticate (userData) {\n  return axios.post(`${API_URL}/login/`, userData)\n}\n\nexport function save_current_city (city, jwt) {\n  return axios.post(`${API_URL}/save_city/`, city, { headers: { Authorization: `Bearer: ${jwt}` } })\n}\n\nexport function register (userData) {\n  return axios.post(`${API_URL}/register/`, userData)\n}\n"]}]}